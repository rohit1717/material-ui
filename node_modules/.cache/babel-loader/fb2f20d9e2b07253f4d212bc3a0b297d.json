{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Desktop/material-ui/src/pages/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { Container } from '@material-ui/core';\nimport NoteCard from '../components/NoteCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notes() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8000/notes').then(res => res.json()).then(data => setNotes(data));\n  }, []);\n\n  const handleDelete = async id => {\n    await fetch('http://localhost:8000/notes/' + id, {\n      method: 'DELETE'\n    });\n    const newNotes = notes.filter(note => note.id != id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(NoteCard, {\n          note: note\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Notes, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n\n_c = Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/home/rohit/Desktop/material-ui/src/pages/Notes.js"],"names":["React","useEffect","useState","Grid","Paper","Container","NoteCard","Notes","notes","setNotes","fetch","then","res","json","data","handleDelete","id","method","newNotes","filter","note","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAE9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEMG,IAAI,IAAEL,QAAQ,CAACK,IAAD,CAFpB;AAGD,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMC,YAAY,GAAC,MAAOC,EAAP,IAAY;AAC7B,UAAMN,KAAK,CAAC,iCAA+BM,EAAhC,EAAmC;AAC5CC,MAAAA,MAAM,EAAC;AADqC,KAAnC,CAAX;AAIA,UAAMC,QAAQ,GAACV,KAAK,CAACW,MAAN,CAAaC,IAAI,IAAEA,IAAI,CAACJ,EAAL,IAASA,EAA5B,CAAf;AACD,GAND;;AAQA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACGR,KAAK,CAACa,GAAN,CAAUD,IAAI,iBACb,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAyB,QAAA,EAAE,EAAE,EAA7B;AAAiC,QAAA,EAAE,EAAE,CAArC;AAAwC,QAAA,EAAE,EAAE,CAA5C;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF,SAAgBA,IAAI,CAACJ,EAArB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA5BuBT,K;;KAAAA,K","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport { Container } from '@material-ui/core'\nimport NoteCard from '../components/NoteCard'\n\nexport default function Notes() {\n\n  const [notes, setNotes] = useState([])\n  useEffect(()=>{\n    fetch('http://localhost:8000/notes')\n    .then(res=>res.json())\n    .then(data=>setNotes(data))\n  },[])\n\n  const handleDelete=async (id)=>{\n    await fetch('http://localhost:8000/notes/'+id,{\n      method:'DELETE'\n    })\n\n    const newNotes=notes.filter(note=>note.id!=id)\n  }\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        {notes.map(note=>(\n          <Grid item key={note.id} xs={12} sm={6} md={3}> \n            <NoteCard note={note}/>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}